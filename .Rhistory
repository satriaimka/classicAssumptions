library(haven)
library(car)
library(lmtest)
library(nortest)
library(tseries)
library(classicAssumptions)
.libPaths()
library(classicAssumptions)
install.packages("devtools")
devtools::install()
library(classicAssumptions)
library(devtools)
library(devtools)
library(classicAssumptions)
library(devtools)
devtools::install()
install.packages("graphics")
devtools::document()
devtools::document()
devtools::install()
library(classicAssumptions)
library(haven)
library(classicAssumptions)
data <- read_sav("D:/STIS/Semester 4/Analisis Regresi/UAS 2025/UAS 2025 R/2023.sav")
Y <- data$Y
X1 <- data$X1
Xd <- data$Xd
model <- lm(Y ~ X1+Xd, data=data)
hasil <- uji_asumsi_klasik(model)
print(hasil)
$normalitas
hasil$normalitas
library(haven)
library(classicAssumptions)
data <- read_sav("D:/STIS/Semester 4/Analisis Regresi/UAS 2025/UAS 2025 R/2023.sav")
Y <- data$Y
X1 <- data$X1
Xd <- data$Xd
model <- lm(Y ~ X1+Xd, data=data)
hasil <- uji_asumsi_klasik(model)
print(hasil)
hasil$normalitas
hasil$autokorelasi
hasil$summary
hasil$model_original
hasil$multikolinearitas
transformasi_otomatis(
data = data,
formula = Y~X1+Xd,
alpha = 0.05,
verbose = TRUE
)
hasil$homoskedastisitas
Y_n <- log(Y)
X1_n <- log(X1)
Xd_n <- log(Xd)
model_trans <- lm(Y_n~X1_n+Xd_n, data=data)
model_trans <- lm(Y_n~X1_n+Xd, data=data)
uji_asumsi_klasik(model_trans)
devtools::install_github("gitraya1400/pemilihan.model")
library(pemilihan.model)
library(pemilihan.model)
pemilihan.model::pilih_model(method = "stepwise")
library(haven)
Data_Regresi08 <- read_sav("D:/STIS/Semester 4/Analisis Regresi/Praktikum/Praktikum 8/Data_Regresi08.sav")
View(Data_Regresi08)
data_path<-Data_Regresi08
Y<-Data_Regresi08$Y
X1<-Data_Regresi08$X1
X2<-Data_Regresi08$X2
model<-lm( Y ~ X1 + X2 + X3, data = "data_path")
library(pemilihan.model)
data_path<-Data_Regresi08
Y<-Data_Regresi08$Y
X1<-Data_Regresi08$X1
X2<-Data_Regresi08$X2
X3<-Data_Regresi08$X3
model<-lm( Y ~ X1 + X2 + X3, data = "data_path")
model<-lm( Y ~ X1 + X2 + X3, data = data_path)
model_terBAIK<-pilih_model(model, method = "stepwise")
model_terBAIK<-pilih_model(model, method = "all")
model_terBAIK<-pilih_model(model, method = "forward")
library(pemilihan.model)
data_path<-Data_Regresi08
Y<-Data_Regresi08$Y
X1<-Data_Regresi08$X1
X2<-Data_Regresi08$X2
X3<-Data_Regresi08$X3
model<-lm( Y ~ X1 + X2 + X3, data = data_path)
model_terBAIK<-pilih_model(model, method = "all")
library(pemilihan.model)
data_path<-Data_Regresi08
Y<-Data_Regresi08$Y
X1<-Data_Regresi08$X1
X2<-Data_Regresi08$X2
X3<-Data_Regresi08$X3
model<-lm( Y ~ X1 + X2 + X3, data = data_path)
model_terBAIK<-pilih_model(model, method = "all")
library(haven)
library(classicAssumptions)
data <- read_sav("D:/STIS/Semester 4/Analisis Regresi/UAS 2025/UAS 2025 R/2023.sav")
Y <- data$Y
X1 <- data$X1
Xd <- data$Xd
model <- lm(Y ~ X1+Xd, data=data)
hasil <- uji_asumsi_klasik(model)
print(hasil)
hasil$normalitas
transformasi_otomatis(
data = data,
formula = Y~X1+Xd,
alpha = 0.05,
verbose = TRUE
)
uji_asumsi_klasik(model_trans)
hasil1 <- uji_asumsi_klasik(model_trans)
print(hasil1)
hasil1$homoskedastisitas
model_terbaik <- pemilihan.model::pilih_model(model, method = "forward")
library(pemilihan.model)
data_path<-Data_Regresi08
Y<-Data_Regresi08$Y
X1<-Data_Regresi08$X1
X2<-Data_Regresi08$X2
X3<-Data_Regresi08$X3
model<-lm( Y ~ X1 + X2 + X3, data = data_path)
model_terbaik <- pemilihan.model::pilih_model(model, method = "forward")
model_terbaik <- pemilihan.model::pilih_model(model, method = "all")
model_terbaik <- pemilihan.model::pilih_model(model, method = "stepwise")
devtools::install()
devtools::document()
devtools::install()
library(haven)
library(classicAssumptions)
data <- read_sav("D:/STIS/Semester 4/Analisis Regresi/UAS 2025/UAS 2025 R/2023.sav")
Y <- data$Y
X1 <- data$X1
Xd <- data$Xd
model <- lm(Y ~ X1+Xd, data=data)
hasil <- uji_asumsi_klasik(model)
print(hasil)
devtools::document()
